--- a/lhsz.c
+++ b/lhsz.c
@@ -1,7 +1,8 @@
 static void lhsz(void) {
   int i, j, k;
+#pragma omp parallel for private(tmp1, tmp2, tmp3) collapse(3)
   for (i = 1; i < grid_points[0]-1; i++) {
     for (j = 1; j < grid_points[1]-1; j++) {
       for (k = 0; k < grid_points[2]; k++) {
 	tmp1 = 1.0 / u[i][j][k][0];
 	tmp2 = tmp1 * tmp1;
@@ -82,8 +83,9 @@
     }
   }
   for (i = 1; i < grid_points[0]-1; i++) {
+#pragma omp parallel for private(tmp1, tmp2) collapse(2)
     for (j = 1; j < grid_points[1]-1; j++) {
       for (k = 1; k < grid_points[2]-1; k++) {
 	tmp1 = dt * tz1;
 	tmp2 = dt * tz2;
 	lhs[i][j][k][AA][0][0] = - tmp2 * fjac[i][j][k-1][0][0]