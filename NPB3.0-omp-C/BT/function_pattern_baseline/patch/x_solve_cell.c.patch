--- a/original_code.c
+++ b/modified_code.c
@@ -1,5 +1,6 @@
 static void x_solve_cell(void) {
   int i,j,k,isize;
   isize = grid_points[0]-1;
+#pragma omp parallel for
   for (j = 1; j < grid_points[1]-1; j++) {
     for (k = 1; k < grid_points[2]-1; k++) {
       binvcrhs( lhs[0][j][k][BB],
@@ -8,6 +9,7 @@
   }
   for (i = 1; i < isize; i++) {
     for (j = 1; j < grid_points[1]-1; j++) {
+#pragma omp parallel for
       for (k = 1; k < grid_points[2]-1; k++) {
 	matvec_sub(lhs[i][j][k][AA],
 		   rhs[i-1][j][k], rhs[i][j][k]);
@@ -21,6 +23,7 @@
     }
   }
   for (j = 1; j < grid_points[1]-1; j++) {
+#pragma omp parallel for
     for (k = 1; k < grid_points[2]-1; k++) {
       matvec_sub(lhs[isize][j][k][AA],
 		 rhs[isize-1][j][k], rhs[isize][j][k]);