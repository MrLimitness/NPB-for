--- a/original_code.c
+++ b/parallel_code.c
@@ -3,6 +3,7 @@
     int i3, i2, i1, d1, d2, d3, t1, t2, t3;
     double z1[M], z2[M], z3[M];
     if ( n1 != 3 && n2 != 3 && n3 != 3 ) {
+#pragma omp parallel for default(shared) private(i3, i2, i1, z1, z2, z3) schedule(static)
 	for (i3 = 0; i3 < mm3-1; i3++) {
             for (i2 = 0; i2 < mm2-1; i2++) {
 		for (i1 = 0; i1 < mm1; i1++) {
@@ -61,9 +62,11 @@
             t3 = 0;
 	}
     {
+#pragma omp parallel default(shared) private(i3, i2, i1)
+#pragma omp for schedule(static) nowait
 	for ( i3 = d3; i3 <= mm3-1; i3++) {
             for ( i2 = d2; i2 <= mm2-1; i2++) {
-		for ( i1 = d1; i1 <= mm1-1; i1++) {
+		for ( i1 = d1; i1 <= mm1-1; i1++) { // L64
 		    u[2*i3-d3-1][2*i2-d2-1][2*i1-d1-1] =
 			u[2*i3-d3-1][2*i2-d2-1][2*i1-d1-1]
 			+z[i3-1][i2-1][i1-1];
@@ -75,7 +78,7 @@
 	    }
             for ( i2 = 1; i2 <= mm2-1; i2++) {
 		for ( i1 = d1; i1 <= mm1-1; i1++) {
-		    u[2*i3-d3-1][2*i2-t2-1][2*i1-d1-1] =
+		    u[2*i3-d3-1][2*i2-t2-1][2*i1-d1-1] = // L77
 			u[2*i3-d3-1][2*i2-t2-1][2*i1-d1-1]
 			+0.5*(z[i3-1][i2][i1-1]+z[i3-1][i2-1][i1-1]);
 		}
@@ -87,7 +90,9 @@
 		}
 	    }
 	}
+#pragma omp for schedule(static)
 	for ( i3 = 1; i3 <= mm3-1; i3++) {
+
             for ( i2 = d2; i2 <= mm2-1; i2++) {
 		for ( i1 = d1; i1 <= mm1-1; i1++) {
 		    u[2*i3-t3-1][2*i2-d2-1][2*i1-d1-1] =
@@ -121,7 +126,7 @@
 	}
     }
     }//end #pragma omp parallel
-    if (debug_vec[0] >= 1 ) {
+    if (debug_vec[0] >= 1 ) { // L122
 	rep_nrm(z,mm1,mm2,mm3,"z: inter",k-1);
 	rep_nrm(u,n1,n2,n3,"u: inter",k);
     }