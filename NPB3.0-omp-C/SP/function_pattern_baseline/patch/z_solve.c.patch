--- a/z_solve.c
+++ b/z_solve.c
@@ -4,6 +4,7 @@
   double fac1, fac2;
   lhsz();
   n = 0;
+#pragma omp parallel for collapse(2) private(i,j,k,k1,k2,m,fac1)
   for (i = 1; i <= grid_points[0]-2; i++) {
     for (j = 1; j <= grid_points[1]-2; j++) {
       for (k = 0; k <= grid_points[2]-3; k++) {
@@ -40,6 +41,7 @@
   }
   k  = grid_points[2]-2;
   k1 = grid_points[2]-1;
+#pragma omp parallel for collapse(2) private(i,j,m,fac1,fac2)
   for (i = 1; i <= grid_points[0]-2; i++) {
     for (j = 1; j <= grid_points[1]-2; j++) {
       fac1               = 1./lhs[n+2][i][j][k];
@@ -65,6 +67,7 @@
   for (m = 3; m < 5; m++) {
     n = (m-3+1)*5;
     for (i = 1; i <= grid_points[0]-2; i++) {
+#pragma omp parallel for collapse(2) private(i,j,k,k1,k2,fac1)
       for (j = 1; j <= grid_points[1]-2; j++) {
 	for (k = 0; k <= grid_points[2]-3; k++) {
 	k1 = k  + 1;
@@ -93,6 +96,7 @@
     }
     k  = grid_points[2]-2;
     k1 = grid_points[2]-1;
+#pragma omp parallel for collapse(2) private(i,j,fac1,fac2)
     for (i = 1; i <= grid_points[0]-2; i++) {
       for (j = 1; j <= grid_points[1]-2; j++) {
 	fac1               = 1./lhs[n+2][i][j][k];
@@ -114,6 +118,7 @@
   k  = grid_points[2]-2;
   k1 = grid_points[2]-1;
   n = 0;
+#pragma omp parallel for collapse(3) private(m,i,j)
   for (m = 0; m < 3; m++) {
     for (i = 1; i <= grid_points[0]-2; i++) {
       for (j = 1; j <= grid_points[1]-2; j++) {
@@ -122,6 +127,7 @@
       }
     }
   }
+#pragma omp parallel for collapse(3) private(m,n,i,j)
   for (m = 3; m < 5; m++) {
     n = (m-3+1)*5;
     for (i = 1; i <= grid_points[0]-2; i++) {
@@ -132,6 +138,7 @@
     }
   }
   n = 0;
+#pragma omp parallel for collapse(3) private(m,i,j,k,k1,k2)
   for (m = 0; m < 3; m++) {
     for (i = 1; i <= grid_points[0]-2; i++) {
       for (j = 1; j <= grid_points[1]-2; j++) {
@@ -144,6 +151,7 @@
       }
     }
   }
+#pragma omp parallel for collapse(3) private(m,n,i,j,k,k1,k2)
   for (m = 3; m < 5; m++) {
     n = (m-3+1)*5;
     for (i = 1; i <= grid_points[0]-2; i++) {